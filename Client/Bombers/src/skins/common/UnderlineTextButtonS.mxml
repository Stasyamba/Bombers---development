<?xml version="1.0" encoding="utf-8"?>
<!-- http://blog.flexexamples.com/2009/07/28/displaying-icons-in-a-spark-buttonbar-control-in-flex-4/ -->
<s:SparkSkin name="UnderlineTextSkin"
             xmlns:fx="http://ns.adobe.com/mxml/2009"
             xmlns:s="library://ns.adobe.com/flex/spark"
             minWidth="21" minHeight="21"
             xmlns:mx="library://ns.adobe.com/flex/mx"
        >

    <!-- states -->
    <s:states>
        <s:State name="up"/>
        <s:State name="over"/>
        <s:State name="down"/>
        <s:State name="disabled"/>
    </s:states>

    <!-- host component -->
    <fx:Metadata>
		<![CDATA[
        [HostComponent("components.common.flexcomponents.UnderlinedText")]
        ]]>
	</fx:Metadata>

    <fx:Script>
		<![CDATA[
        [Bindable]
        private var colorLight:uint = 0x000000;

        protected override function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
            super.updateDisplayList(unscaledWidth, unscaledHeight);
        }

        /* Define the skin elements that should not be colorized.
         For toggle button, the graphics are colorized but the label is not. */
        static private const exclusions:Array = [];

        override public function get colorizeExclusions():Array {
            return exclusions;
        }
        ]]>
	</fx:Script>


    <s:VGroup gap="{hostComponent.textGap}"
            >
        <s:Label id="labeDisplay"
                 visible="true"
                 color="{hostComponent.textColor}"
                 maxDisplayedLines="1"
                 fontSize="{hostComponent.textSize}"
                 fontFamily="mps"
                 text="{hostComponent.text}"
                />

        <s:VGroup gap="0" width="100%"
                  visible.up="true"
                  visible.over="false"
                  visible.down="false"
                  visible.disabled="true">
            <s:Rect width="100%" height="{hostComponent.textUnerlineHeight}">
                <s:fill>
                    <s:SolidColor color="{colorLight}"/>
                </s:fill>
            </s:Rect>
            <s:Rect width="100%" height="{hostComponent.textUnerlineHeight}">
                <s:fill>
                    <s:SolidColor color="{hostComponent.textColor}"/>
                </s:fill>
            </s:Rect>
        </s:VGroup>

    </s:VGroup>


</s:SparkSkin>